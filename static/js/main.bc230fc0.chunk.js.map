{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","hoc/Auxiliary/Auxiliary.js","axios-orders.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","hoc/withErrorHandler/withErrorHandler.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Backdrop/Backdrop.js","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/UI/Modal/Modal.js","components/UI/Input/Input.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/ToggleButton/ToggleButton.module.css","components/UI/Backdrop/Backdrop.module.css","containers/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.js","containers/Auth/Auth.module.css","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/ToggleButton/Togglebutton.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","reportWebVitals.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_FAILED","AUTH_SUCCESS","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","aux","props","children","instance","create","baseURL","button","className","styles","Button","btnType","join","onClick","clicked","spinner","Loader","module","exports","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","this","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","modalClosed","show","message","Component","backdrop","Backdrop","Modal","nextProps","nextState","nextContext","prevProps","prevState","snapshot","style","transform","opacity","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","onChange","changed","options","map","option","displayValue","Input","Label","label","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","igKey","Array","_","i","reduce","arr","el","concat","Burger","Auth","controls","placeholder","validation","valid","inputChangedHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","onSetAuthRedirectPath","formElementsArray","config","form","formElement","loading","errorMessage","authRedirect","isAuthenticated","to","onSubmit","connect","burgerBuilder","building","actions","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","link","exact","activeClassName","active","navigationItems","NavigationItems","toggleButton","ToggleButton","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","Content","buildControl","BuildControl","More","added","Less","removed","disabled","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","console","log","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","totalPrice","ingName","onSetRedirectPath","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchased","newOrder","authStart","authFail","authLogout","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","ContactData","orderForm","street","zipCode","country","deliveryMethod","formIsValid","orderHandler","formData","formElementIdentifier","order","onOrderBurger","inputIdentifier","updatedFormElement","updatedOrderForm","userIt","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","checkoutCanceled","match","amount","ingredientOutput","ig","display","border","padding","Order","Orders","onFetchOrders"],"mappings":"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","file":"static/js/main.bc230fc0.chunk.js","sourcesContent":["export const ADD_INGREDIENT='ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT='REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n//\r\nexport const PURCHASE_BURGER_SUCCESS='PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL='PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START='PURCHASE_BURGER_START';\r\n\r\n//Redirect for submitting the order\r\nexport const PURCHASE_INIT='PURCHASE_INIT';\r\n\r\n//Actions for handling order's page\r\nexport const FETCH_ORDERS_START='FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS ='FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL='FETCH_ORDERS_FAIL';\r\n\r\n//Actions for authentication\r\nexport const AUTH_START='AUTH_START';\r\nexport const AUTH_FAILED='AUTH_FAILED';\r\nexport const AUTH_SUCCESS='AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\n\r\n\r\n","export const updateObject= (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const  checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) =>{\r\n    return{\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) =>{\r\n    return{\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\n//Internal action that will keep ingredients until initIngredients is ready\r\nexport const setIngredients = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\n//Initially to load ingredients that we will use in BurgerBuilder\r\nexport const initIngredients = () => {\r\n    //Fetch ingredients asynchronously  throw REDUX-THUNK method\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-1f756-default-rtdb.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess =(id, orderData)=>{\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) =>{\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch =>{\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders) =>{\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderFail = (error) =>{\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    };\r\n};\r\n\r\n//Const to run asynchronous code\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        const queryParams = '?auth='+token+'&orderBy=\"userId\"&equalTo=\"' +userId + '\"';\r\n        axios.get('/orders.json'+ queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrderSuccess(fetchedOrders));\r\n\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrderFail(err))\r\n            });\r\n    };\r\n};\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('expirationDate');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\n/*To update Token when time is expired*/\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime*1000);\r\n    };\r\n};\r\n\r\nexport const auth =(email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url ='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDN6l9f2lnVy8xRjN_MFUdtNWSNbnLBEV0';\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDN6l9f2lnVy8xRjN_MFUdtNWSNbnLBEV0';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn*1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFailed(err.response.data.error));\r\n            })\r\n\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000))\r\n            }\r\n        }\r\n    }\r\n}","import React from  'react';\r\n\r\nconst aux  = (props) => props.children;\r\n\r\nexport default aux;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://react-my-burger-1f756-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst button =(props) =>(\r\n    <button\r\n        className={\r\n            [styles.Button, styles[props.btnType]].join(' ')\r\n        }\r\n\r\n        onClick={props.clicked}>{props.children}</button>\r\n\r\n)\r\nexport default button;\r\n","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\nconst spinner = () => (\r\n    <div className={styles.Loader}>Loading ...</div>\r\n);\r\n\r\nexport default spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1EOf_\",\"BreadTop\":\"BurgerIngredient_BreadTop__1I3v6\",\"Seeds1\":\"BurgerIngredient_Seeds1__2AhHM\",\"Seeds2\":\"BurgerIngredient_Seeds2__2yrxn\",\"Meat\":\"BurgerIngredient_Meat__cQu3r\",\"Cheese\":\"BurgerIngredient_Cheese__38pWx\",\"Salad\":\"BurgerIngredient_Salad__G35sT\",\"Bacon\":\"BurgerIngredient_Bacon__BkxxY\"};","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n\r\n    return class extends Component{\r\n        state={\r\n            error: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.reqInterceptor=axios.interceptors.request.use(req =>{\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error =>{\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n//remove interceptors\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () =>{\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                        show={this.state.error}>\r\n                        {this.state.error ? this.state.error.message : null }\r\n\r\n                    </Modal>\r\n                    <WrappedComponent  {...this.props} />\r\n                </Aux>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withErrorHandler;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2CYQC\",\"Logo\":\"SideDrawer_Logo__1ZM0A\",\"Open\":\"SideDrawer_Open__3D4R7\",\"Close\":\"SideDrawer_Close__Sfz8I\"};","import React from 'react';\r\nimport styles from './Backdrop.module.css';\r\n\r\nconst backdrop =(props)=>(\r\n\r\n    props.show ? <div className={styles.Backdrop}\r\n                      onClick={props.clicked}></div> : null\r\n\r\n)\r\n\r\nexport default backdrop;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__24PfQ\",\"Label\":\"BuildControl_Label__1jztX\",\"Less\":\"BuildControl_Less__2W0G8\",\"More\":\"BuildControl_More__1c-H5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2ZJAJ\",\"Label\":\"Input_Label__17enD\",\"InputElement\":\"Input_InputElement__2AYyT\",\"Invalid\":\"Input_Invalid__2ZZH5\"};","import React, { Component } from'react';\r\nimport styles from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop' ;\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\r\n            return nextProps.show !== this.props.show;\r\n\r\n    }\r\n    //we made sure that we didn't update [Order Summary] unnecessary,\r\n    //now it update when we push \"Order NOW\" at first it updated everytime when we added item.\r\n    //we do it in the [Modal] because in [BurgerBuilder] Modal controls [OrderSummary] component\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n\r\n                <div className={styles.Modal}\r\n                     style={{\r\n                         transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                         opacity: this.props.show ? \"1\" : \"0\"\r\n                     }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport styles from './Input.module.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [styles.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(styles.Invalid);\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Input}>\r\n            <label className={styles.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;\r\n","import styles from './BurgerIngredient.module.css';\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient =null;\r\n\r\n        switch (this.props.type){\r\n            case (\"bread-bottom\"):\r\n                ingredient =<div className ={styles.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient =(\r\n                    <div className={styles.BreadTop}>\r\n                        <div className={styles.Seeds1}></div>\r\n                        <div className={styles.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient=(\r\n                    <div className={styles.Meat}></div>\r\n                );\r\n                break;\r\n            case ('cheese'):\r\n                ingredient=(\r\n                    <div className={styles.Cheese}></div>\r\n                );\r\n                break;\r\n\r\n            case ('salad'):\r\n                ingredient=(\r\n                    <div className={styles.Salad}></div>\r\n                );\r\n                break;\r\n            case ('bacon'):\r\n                ingredient=(\r\n                    <div className={styles.Bacon}></div>\r\n                );\r\n                break;\r\n            default:\r\n                ingredient=null;\r\n        }\r\n        return ingredient;\r\n\r\n    }\r\n\r\n\r\n}\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport styles from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger =(props)=>{\r\n    //transform into an array\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey=>{\r\n            return [...Array( props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey+i} type={igKey}/>\r\n            });\r\n        })\r\n        .reduce((arr, el) =>{\r\n\r\n            return arr.concat(el)\r\n        }, []);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\nexport default burger;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1eHzv\",\"Logo\":\"Toolbar_Logo__2rBmH\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1_YDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__c7eDL\",\"active\":\"NavigationItem_active__2Rh6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3oEgt\",\"OrderButton\":\"BuildControls_OrderButton__2rawv\",\"enable\":\"BuildControls_enable__Gvosk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1UsU_\",\"Success\":\"Button_Success__3Eam2\",\"Danger\":\"Button_Danger__3ro1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3PPR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__27EdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleButton\":\"ToggleButton_ToggleButton__WjRXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__32HAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__255yK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1--2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3g3f6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__15JuK\",\"load6\":\"Spinner_load6__3aqiJ\",\"round\":\"Spinner_round__3H0yq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2VGDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3m9VL\",\"Input\":\"ContactData_Input__1HXlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__12592\"};","import React, { Component } from 'react';\r\nimport  { connect } from 'react-redux';\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from '../../components/UI/Button/Button';\r\nimport styles from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\n\r\n\r\nclass Auth extends Component {\r\n    state={\r\n        controls:{\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/burger-app'){\r\n            this.props.onSetAuthRedirectPath()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = updateObject(this.state.controls, {\r\n            [controlName]: updateObject(this.state.controls[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        this.setState({controls: updatedControls});\r\n        }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState =>{\r\n            return {isSignup: !prevState.isSignup}\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n\r\n        for (let key in this.state.controls) {\r\n\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key = {formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                    ));\r\n        if (this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n        let errorMessage = null;\r\n        if(this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n                authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n\r\n\r\n        return(\r\n            <div className={styles.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\" >Submit</Button>\r\n                </form>\r\n                <Button\r\n                    clicked={() => this.switchAuthModeHandler()}\r\n                    btnType=\"Danger\" >SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth:(email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/burger-app'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3tKhK\"};","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport styles from './Logo.module.css';\r\n\r\nconst logo=(props)=>(\r\n    <div className={styles.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"My burger\" />\r\n    </div>\r\n\r\n);\r\nexport default logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './NavigationItem.module.css';\r\n\r\nconst navigationItem =(props)=>(\r\n    <li className={styles.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={styles.active}\r\n        >{props.children}</NavLink>\r\n\r\n    </li>\r\n\r\n);\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport styles from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) =>(\r\n    <ul className={styles.NavigationItems}>\r\n        <NavigationItem link=\"/burger-app\" exact>Burger Builder</NavigationItem>\r\n        { props.isAuthenticated\r\n            ? <NavigationItem link = \"/orders\">Orders</NavigationItem> : null}\r\n        { !props.isAuthenticated\r\n            ? <NavigationItem link = \"/auth\">Authentication</NavigationItem>\r\n            : <NavigationItem link = \"/logout\">Logout</NavigationItem>}\r\n\r\n    </ul>\r\n\r\n);\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport styles from './ToggleButton.module.css';\r\n\r\n\r\nconst toggleButton =(props)=>{\r\n    return(\r\n        <div className={styles.ToggleButton}  onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default toggleButton;\r\n","import React from 'react';\r\nimport styles from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport ToggleButton from \"../ToggleButton/Togglebutton\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\n\r\n\r\nconst toolbar =(props) =>(\r\n    <header className={styles.Toolbar}>\r\n        <div>\r\n            <ToggleButton  clicked={props.drawerToggleClicked}/>\r\n        </div>\r\n\r\n        <div className={styles.Logo}>\r\n            <Logo/>\r\n        </div>\r\n\r\n        <nav className={styles.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n\r\n    </header>\r\n\r\n)\r\nexport default toolbar;\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport styles from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer =(props) =>{\r\n    let attachedClasses =[styles.SideDrawer, styles.Close];\r\n    if(props.open){\r\n        attachedClasses =[ styles.SideDrawer, styles.Open];\r\n\r\n    }\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses. join(' ')} onClick={props.closed}>\r\n            <div className={styles.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuth} />\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n        )\r\n};\r\n\r\n\r\nexport default sideDrawer;\r\n","import React, {Component} from 'react';\r\nimport  { connect } from 'react-redux';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport styles from './Layout.module.css';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\n\r\nclass Layout extends Component {\r\n\r\n    state={\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler=()=>{\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n   //handler that toggle sidebar menu and set state dependable on the old state  to the opposite state\r\n    sideDrawerToggleHandler=()=>{\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth = {this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer\r\n                    isAuth = {this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={styles.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react';\r\nimport styles from './BuildControl.module.css';\r\n\r\nconst buildControl =(props)=>{\r\n    return (\r\n        <div className={styles.BuildControl}>\r\n            <div className={styles.Label}>\r\n                {props.label}\r\n            </div>\r\n            <button className={styles.More}\r\n                    onClick={props.added}>More</button>\r\n            <button className={styles.Less}\r\n                    onClick={props.removed}\r\n                    disabled={props.disabled}>Less</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport styles from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls =[\r\n    {label:'Salad', type: 'salad'},\r\n    {label:'Bacon', type: 'bacon'},\r\n    {label:'Cheese', type: 'cheese'},\r\n    {label:'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls =(props)=>{\r\n   return(\r\n        <div className={styles.BuildControls}>\r\n            <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    added={() => props.ingredientAdded(ctrl.type)}\r\n                    removed={()=>props.ingredientRemoved(ctrl.type)}\r\n                    disabled={props.disabled[ctrl.type]}\r\n                />\r\n                ))}\r\n\r\n                <button className={styles.OrderButton}\r\n                        disabled={!props.purchasable}\r\n                        onClick={props.ordered}>{props.isAuth ? \"ORDER NOW\" : \"SIGNUP TO ORDER\"}</button>\r\n        </div>\r\n    )\r\n}\r\nexport default buildControls;\r\n","import React,{ Component } from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\n\r\nclass OrderSummary  extends Component{\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"[Order summary] will update\");\r\n    }\r\n\r\n    render(){\r\n        const ingredientSummary=Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span>:\r\n                        {this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n            });\r\n        return(\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total price:{this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default OrderSummary;\r\n","import React, {Component} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state={\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum=Object.keys(ingredients)\r\n            .map(igKey =>{\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum,el) => {\r\n                return sum+el;\r\n            }, 0);\r\n        return  sum >0;\r\n    }\r\n\r\n   /* addIngredientHandler=(type)=>{\r\n        const oldCount = this.props.ings[type];\r\n        const updatedCounted =oldCount+1;\r\n\r\n        const updatedIngredients ={\r\n            ...this.props.ings\r\n        };\r\n\r\n        updatedIngredients[type]=updatedCounted;\r\n\r\n        //update\r\n        const priceAddition=INGREDIENT_PRICES[type];\r\n\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice=oldPrice+priceAddition;\r\n\r\n\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }*/\r\n\r\n   /* removeIngredientHandler=(type)=>{\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <=0){\r\n            return;\r\n        }\r\n        const updatedCounted =oldCount-1;\r\n        const updatedIngredients ={\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        updatedIngredients[type]=updatedCounted;\r\n\r\n        //update\r\n        const priceDeduction=INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice=oldPrice-priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n\r\n    }*/\r\n\r\n    purchaseHandler=()=>{\r\n        if (this.props.isAuthenticated){\r\n            this.setState({ purchasing: true});\r\n        }else {\r\n\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler =() =>{\r\n           this.props.onInitPurchase();\r\n           this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo ={\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger =  this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if ( this.props.ings ){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        isAuth={this.props.isAuthenticated}\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled ={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        price={this.props.price}\r\n                        ordered={() => this.purchaseHandler()}\r\n                    />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary =  <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCanceled={()=>this.purchaseCancelHandler()}\r\n                purchaseContinued={()=>this.purchaseContinueHandler()}/>;\r\n\r\n        }\r\n\r\n        if( this.state.loading ){\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal\r\n                    show={this.state.purchasing}\r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state =>{\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !==null\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to =\"/burger-app\" />;\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state= {\r\n            component: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState ({ component: cmp.default});\r\n                });\r\n        }\r\n\r\n        render(){\r\n            const C = this. state.component;\r\n\r\n            return C ? <C {...this.props} /> :null\r\n      }\r\n\r\n    }\r\n}\r\nexport default asyncComponent;","import React, {Component} from 'react';\r\nimport Layout from './containers/Layout/Layout';\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './store/actions/index';\r\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\r\n\r\nconst asyncCheckout = asyncComponent(() => {\r\n    return import('./containers/Checkout/Checkout');\r\n});\r\n\r\nconst asyncOrders = asyncComponent(() => {\r\n    return import('./containers/Orders/Orders');\r\n});\r\n\r\nconst asyncAuth = asyncComponent(() => {\r\n    return import('./containers/Auth/Auth');\r\n});\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.onTryAutoSignup();\r\n    }\r\n\r\n    render(){\r\n        let routes=(\r\n            <Switch>\r\n                <Route path=\"/auth\" component={Auth} />\r\n                <Route path=\"/burger-app\" exact component={BurgerBuilder} />\r\n                <Redirect to = \"/burger-app\" />\r\n            </Switch>\r\n    );\r\n        if (this.props.isAuthenticated) {\r\n            routes = (\r\n                <Switch>\r\n                    <Route path=\"/checkout\" component={asyncCheckout} />\r\n                    <Route path=\"/orders\" component={asyncOrders} />\r\n                    <Route path=\"/logout\" component={Logout} />\r\n                    <Route path=\"/auth\" component={asyncAuth} />\r\n                    <Route path=\"/burger-app\" exact component={BurgerBuilder} />\r\n                    <Redirect to = \"/burger-app\" />\r\n                </Switch>\r\n            );\r\n        }\r\n\r\n    return (\r\n            <Layout>\r\n                {routes}\r\n            </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState={\r\n    ingredients: null,\r\n    totalPrice:4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        building: true,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedState );\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedSt );\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject( state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    } );\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, { error: true } );\r\n};\r\n\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport * as actions from '../actions/index';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState={\r\n    orders:[],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, {id: action.orderId})\r\n\r\n            return updateObject(state, {\r\n                loading: true,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)});\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)});\r\n\r\n\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, {loading: true});\r\n\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, {purchased: false});\r\n\r\n\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return updateObject(state, {loading: true});\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return updateObject(state, {\r\n                loading: false,\r\n                orders: action.orders});\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return updateObject(state, {loading: false});\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport * as actions from '../actions/index';\r\nimport  { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/burger-app'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject( state, {token: null, userId: null});\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_FAILED: return authFail(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    orders: orderReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    ));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n)\r\nReactDOM.render(app,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react';\r\nimport styles from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst checkoutSummary =(props)=>{\r\n    return(\r\n        <div className={styles.CheckoutSummary}>\r\n            <h1>We hope it testes well!</h1>\r\n            <div style={{width:'100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n\r\n            <Button btnType=\"Danger\"\r\n                    clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default checkoutSummary;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport styles from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport * as actions from '../../../store/actions/index';\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { updateObject, checkValidity } from '../../../shared/utility';\r\n\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n       this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n\r\n        const updatedFormElement =updateObject(this.state.orderForm[inputIdentifier],\r\n            {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n                touched: true,\r\n        });\r\n\r\n        const updatedOrderForm = updateObject(this.state.orderForm,{\r\n            [inputIdentifier]: updatedFormElement\r\n        });\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={styles.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.orders.loading,\r\n        token:state.auth.token,\r\n        userIt: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onOrderBurger: (orderData, token) => dispatch (actions.purchaseBurger(orderData, token))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n    checkoutCanceledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        //Redirect  to home page if no ingredients are loaded\r\n        let summary = <Redirect to ='/burger-app'/>\r\n\r\n        //If ingredients are available we will render summary\r\n        if(this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/burger-app' /> : null;\r\n            summary=(\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutContinued = {this.checkoutContinuedHandler}\r\n                        checkoutCanceled = {this.checkoutCanceledHandler}\r\n                    />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component = {ContactData}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        purchased: state.orders.purchased\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Checkout);\r\n","import React from 'react';\r\nimport styles from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients =[];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name:ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n            );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span\r\n            style={{textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid black',\r\n            padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n\r\n    })\r\n    return(\r\n\r\n        <div className={styles.Order}>\r\n        <p>Ingredients: {ingredientOutput} </p>\r\n        <p>Price: <strong> USD {props.price} </strong></p>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default order;\r\n","import React, {Component} from 'react';\r\nimport axios from '../../axios-orders';\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner/>;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order key={order.id}\r\n                       ingredients={order.ingredients}\r\n                       price={order.price}/>\r\n            ))};\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders: state.orders.orders,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders:(token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}