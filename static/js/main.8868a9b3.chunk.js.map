{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/ToggleButton/ToggleButton.module.css","components/UI/Backdrop/Backdrop.module.css","containers/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/ToggleButton/Togglebutton.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Toolbar/Toolbar.js","hoc/Auxiliary/Auxiliary.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","logo","props","className","styles","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","isAuthenticated","toggleButton","ToggleButton","onClick","clicked","backdrop","show","Backdrop","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","aux","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","More","added","Less","removed","disabled","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","nextContext","prevProps","snapshot","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","console","log","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_FAILED","AUTH_SUCCESS","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","initIngredients","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","fetchedOrders","key","push","orders","err","logout","email","password","isSignup","authData","returnSecureToken","url","userId","expirationTime","idToken","localId","expiresIn","setTimeout","BurgerBuilder","purchasing","purchaseHandler","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","loading","burgerBuilder","totalPrice","ingName","ingredientName","actions","onSetRedirectPath","path","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","config","form","onSubmit","formElement","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","checkoutCanceled","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Orders","onFetchOrders","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","errorMessage","authRedirect","building","Logout","onLogout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","newOrder","authRedirectPath","authStart","authSuccess","authFail","authLogout","setAuthRedirectPath","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8868a9b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1EOf_\",\"BreadTop\":\"BurgerIngredient_BreadTop__1I3v6\",\"Seeds1\":\"BurgerIngredient_Seeds1__2AhHM\",\"Seeds2\":\"BurgerIngredient_Seeds2__2yrxn\",\"Meat\":\"BurgerIngredient_Meat__cQu3r\",\"Cheese\":\"BurgerIngredient_Cheese__38pWx\",\"Salad\":\"BurgerIngredient_Salad__G35sT\",\"Bacon\":\"BurgerIngredient_Bacon__BkxxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2CYQC\",\"Logo\":\"SideDrawer_Logo__1ZM0A\",\"Open\":\"SideDrawer_Open__3D4R7\",\"Close\":\"SideDrawer_Close__Sfz8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__24PfQ\",\"Label\":\"BuildControl_Label__1jztX\",\"Less\":\"BuildControl_Less__2W0G8\",\"More\":\"BuildControl_More__1c-H5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2ZJAJ\",\"Label\":\"Input_Label__17enD\",\"InputElement\":\"Input_InputElement__2AYyT\",\"Invalid\":\"Input_Invalid__2ZZH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1eHzv\",\"Logo\":\"Toolbar_Logo__2rBmH\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1_YDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__c7eDL\",\"active\":\"NavigationItem_active__2Rh6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3oEgt\",\"OrderButton\":\"BuildControls_OrderButton__2rawv\",\"enable\":\"BuildControls_enable__Gvosk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1UsU_\",\"Success\":\"Button_Success__3Eam2\",\"Danger\":\"Button_Danger__3ro1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3PPR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__27EdC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleButton\":\"ToggleButton_ToggleButton__WjRXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__32HAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__255yK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1--2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3g3f6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__15JuK\",\"load6\":\"Spinner_load6__3aqiJ\",\"round\":\"Spinner_round__3H0yq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2VGDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3m9VL\",\"Input\":\"ContactData_Input__1HXlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__12592\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3tKhK\"};","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport styles from './Logo.module.css';\r\n\r\nconst logo=(props)=>(\r\n    <div className={styles.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"My burger\" />\r\n    </div>\r\n\r\n);\r\nexport default logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './NavigationItem.module.css';\r\n\r\nconst navigationItem =(props)=>(\r\n    <li className={styles.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={styles.active}\r\n        >{props.children}</NavLink>\r\n\r\n    </li>\r\n\r\n);\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport styles from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) =>(\r\n    <ul className={styles.NavigationItems}>\r\n        <NavigationItem link=\"/burger-app\" exact>Burger Builder</NavigationItem>\r\n        { props.isAuthenticated\r\n            ? <NavigationItem link = \"/orders\">Orders</NavigationItem> : null}\r\n        { !props.isAuthenticated\r\n            ? <NavigationItem link = \"/auth\">Authentication</NavigationItem>\r\n            : <NavigationItem link = \"/logout\">Logout</NavigationItem>}\r\n\r\n    </ul>\r\n\r\n);\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport styles from './ToggleButton.module.css';\r\n\r\n\r\nconst toggleButton =(props)=>{\r\n    return(\r\n        <div className={styles.ToggleButton}  onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default toggleButton;\r\n","import React from 'react';\r\nimport styles from './Backdrop.module.css';\r\n\r\nconst backdrop =(props)=>(\r\n\r\n    props.show ? <div className={styles.Backdrop}\r\n                      onClick={props.clicked}></div> : null\r\n\r\n)\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport styles from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport ToggleButton from \"../ToggleButton/Togglebutton\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\n\r\n\r\nconst toolbar =(props) =>(\r\n    <header className={styles.Toolbar}>\r\n        <div>\r\n            <ToggleButton  clicked={props.drawerToggleClicked}/>\r\n        </div>\r\n\r\n        <div className={styles.Logo}>\r\n            <Logo/>\r\n        </div>\r\n\r\n        <nav className={styles.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n\r\n    </header>\r\n\r\n)\r\nexport default toolbar;\r\n","import React from  'react';\r\n\r\nconst aux  = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport styles from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer =(props) =>{\r\n    let attachedClasses =[styles.SideDrawer, styles.Close];\r\n    if(props.open){\r\n        attachedClasses =[ styles.SideDrawer, styles.Open];\r\n\r\n    }\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses. join(' ')}>\r\n            <div className={styles.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuth} />\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n        )\r\n};\r\n\r\n\r\nexport default sideDrawer;\r\n","import React, {Component} from 'react';\r\nimport  { connect } from 'react-redux';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport styles from './Layout.module.css';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\n\r\nclass Layout extends Component {\r\n\r\n    state={\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler=()=>{\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n   //handler that toggle sidebar menu and set state dependable on the old state  to the opposite state\r\n    sideDrawerToggleHandler=()=>{\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth = {this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer\r\n                    isAuth = {this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={styles.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import styles from './BurgerIngredient.module.css';\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient =null;\r\n\r\n        switch (this.props.type){\r\n            case (\"bread-bottom\"):\r\n                ingredient =<div className ={styles.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient =(\r\n                    <div className={styles.BreadTop}>\r\n                        <div className={styles.Seeds1}></div>\r\n                        <div className={styles.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient=(\r\n                    <div className={styles.Meat}></div>\r\n                );\r\n                break;\r\n            case ('cheese'):\r\n                ingredient=(\r\n                    <div className={styles.Cheese}></div>\r\n                );\r\n                break;\r\n\r\n            case ('salad'):\r\n                ingredient=(\r\n                    <div className={styles.Salad}></div>\r\n                );\r\n                break;\r\n            case ('bacon'):\r\n                ingredient=(\r\n                    <div className={styles.Bacon}></div>\r\n                );\r\n                break;\r\n            default:\r\n                ingredient=null;\r\n        }\r\n        return ingredient;\r\n\r\n    }\r\n\r\n\r\n}\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport styles from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger =(props)=>{\r\n    //transform into an array\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey=>{\r\n            return [...Array( props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey+i} type={igKey}/>\r\n            });\r\n        })\r\n        .reduce((arr, el) =>{\r\n\r\n            return arr.concat(el)\r\n        }, []);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\nexport default burger;\r\n","import React from 'react';\r\nimport styles from './BuildControl.module.css';\r\n\r\nconst buildControl =(props)=>{\r\n    return (\r\n        <div className={styles.BuildControl}>\r\n            <div className={styles.Label}>\r\n                {props.label}\r\n            </div>\r\n            <button className={styles.More}\r\n                    onClick={props.added}>More</button>\r\n            <button className={styles.Less}\r\n                    onClick={props.removed}\r\n                    disabled={props.disabled}>Less</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport styles from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls =[\r\n    {label:'Salad', type: 'salad'},\r\n    {label:'Bacon', type: 'bacon'},\r\n    {label:'Cheese', type: 'cheese'},\r\n    {label:'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls =(props)=>{\r\n   return(\r\n        <div className={styles.BuildControls}>\r\n            <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    added={() => props.ingredientAdded(ctrl.type)}\r\n                    removed={()=>props.ingredientRemoved(ctrl.type)}\r\n                    disabled={props.disabled[ctrl.type]}\r\n                />\r\n                ))}\r\n\r\n                <button className={styles.OrderButton}\r\n                        disabled={!props.purchasable}\r\n                        onClick={props.ordered}>{props.isAuth ? \"ORDER NOW\" : \"SIGNUP TO ORDER\"}</button>\r\n        </div>\r\n    )\r\n}\r\nexport default buildControls;\r\n","import React, { Component } from'react';\r\nimport styles from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop' ;\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n\r\n            return nextProps.show !== this.props.show;\r\n\r\n    }\r\n    //we made sure that we didn't update [Order Summary] unnecessary,\r\n    //now it update when we push \"Order NOW\" at first it updated everytime when we added item.\r\n    //we do it in the [Modal] because in [BurgerBuilder] Modal controls [OrderSummary] component\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n\r\n                <div className={styles.Modal}\r\n                     style={{\r\n                         transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                         opacity: this.props.show ? \"1\" : \"0\"\r\n                     }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Modal;\r\n","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst button =(props) =>(\r\n    <button\r\n        className={\r\n            [styles.Button, styles[props.btnType]].join(' ')\r\n        }\r\n\r\n        onClick={props.clicked}>{props.children}</button>\r\n\r\n)\r\nexport default button;\r\n","import React,{ Component } from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\n\r\nclass OrderSummary  extends Component{\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"[Order summary] will update\");\r\n    }\r\n\r\n    render(){\r\n        const ingredientSummary=Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span>:\r\n                        {this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n            });\r\n        return(\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total price:{this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default OrderSummary;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://react-my-burger-1f756-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\nconst spinner = () => (\r\n    <div className={styles.Loader}>Loading ...</div>\r\n);\r\n\r\nexport default spinner;\r\n","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n\r\n    return class extends Component{\r\n        state={\r\n            error: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.reqInterceptor=axios.interceptors.request.use(req =>{\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error =>{\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n//remove interceptors\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () =>{\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                        show={this.state.error}>\r\n                        {this.state.error ? this.state.error.message : null }\r\n\r\n                    </Modal>\r\n                    <WrappedComponent  {...this.props} />\r\n                </Aux>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withErrorHandler;\r\n\r\n","export const ADD_INGREDIENT='ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT='REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n//\r\nexport const PURCHASE_BURGER_SUCCESS='PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL='PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START='PURCHASE_BURGER_START';\r\n\r\n//Redirect for submitting the order\r\nexport const PURCHASE_INIT='PURCHASE_INIT';\r\n\r\n//Actions for handling order's page\r\nexport const FETCH_ORDERS_START='FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS ='FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL='FETCH_ORDERS_FAIL';\r\n\r\n//Actions for authentication\r\nexport const AUTH_START='AUTH_START';\r\nexport const AUTH_FAILED='AUTH_FAILED';\r\nexport const AUTH_SUCCESS='AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) =>{\r\n    return{\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) =>{\r\n    return{\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\n//Internal action that will keep ingredients until initIngredients is ready\r\nexport const setIngredients = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\n//Initially to load ingredients that we will use in BurgerBuilder\r\nexport const initIngredients = () => {\r\n    //Fetch ingredients asynchronously  throw REDUX-THUNK method\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-1f756-default-rtdb.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess =(id, orderData)=>{\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) =>{\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch =>{\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders) =>{\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderFail = (error) =>{\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    };\r\n};\r\n\r\n//Const to run asynchronous code\r\nexport const fetchOrders = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        axios.get('/orders.json?auth='+ token)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrderSuccess(fetchedOrders));\r\n\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrderFail(err))\r\n            });\r\n    };\r\n};\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\n/*To update Token when time is expired*/\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime*1000);\r\n    };\r\n};\r\n\r\nexport const auth =(email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url ='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDN6l9f2lnVy8xRjN_MFUdtNWSNbnLBEV0';\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDN6l9f2lnVy8xRjN_MFUdtNWSNbnLBEV0';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFailed(err.response.data.error));\r\n            })\r\n\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state={\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.onInitIngredients();\r\n\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum=Object.keys(ingredients)\r\n            .map(igKey =>{\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum,el) => {\r\n                return sum+el;\r\n            }, 0);\r\n        return  sum >0;\r\n    }\r\n\r\n   /* addIngredientHandler=(type)=>{\r\n        const oldCount = this.props.ings[type];\r\n        const updatedCounted =oldCount+1;\r\n\r\n        const updatedIngredients ={\r\n            ...this.props.ings\r\n        };\r\n\r\n        updatedIngredients[type]=updatedCounted;\r\n\r\n        //update\r\n        const priceAddition=INGREDIENT_PRICES[type];\r\n\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice=oldPrice+priceAddition;\r\n\r\n\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }*/\r\n\r\n   /* removeIngredientHandler=(type)=>{\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <=0){\r\n            return;\r\n        }\r\n        const updatedCounted =oldCount-1;\r\n        const updatedIngredients ={\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        updatedIngredients[type]=updatedCounted;\r\n\r\n        //update\r\n        const priceDeduction=INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice=oldPrice-priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\r\n        this.updatePurchaseState(updatedIngredients);\r\n\r\n    }*/\r\n\r\n    purchaseHandler=()=>{\r\n        if (this.props.isAuthenticated){\r\n            this.setState({ purchasing: true});\r\n        }else {\r\n\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler =() =>{\r\n           this.props.onInitPurchase();\r\n           this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo ={\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger =  this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if ( this.props.ings ){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        isAuth={this.props.isAuthenticated}\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled ={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        price={this.props.price}\r\n                        ordered={() => this.purchaseHandler()}\r\n                    />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary =  <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCanceled={()=>this.purchaseCancelHandler()}\r\n                purchaseContinued={()=>this.purchaseContinueHandler()}/>;\r\n\r\n        }\r\n\r\n        if( this.state.loading ){\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal\r\n                    show={this.state.purchasing}\r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state =>{\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !==null\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import React from 'react';\r\nimport styles from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst checkoutSummary =(props)=>{\r\n    return(\r\n        <div className={styles.CheckoutSummary}>\r\n            <h1>We hope it testes well!</h1>\r\n            <div style={{width:'100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n\r\n            <Button btnType=\"Danger\"\r\n                    clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default checkoutSummary;\r\n","import React from 'react';\r\n\r\nimport styles from './Input.module.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [styles.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(styles.Invalid);\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Input}>\r\n            <label className={styles.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport styles from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport * as actions from '../../../store/actions/index';\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n       this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={styles.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.orders.loading,\r\n        token:state.auth.token\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onOrderBurger: (orderData, token) => dispatch (actions.purchaseBurger(orderData, token))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n    checkoutCanceledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        //Redirect  to home page if no ingredients are loaded\r\n        let summary = <Redirect to ='/burger-app'/>\r\n\r\n        //If ingredients are available we will render summary\r\n        if(this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/burger-app' /> : null;\r\n            summary=(\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutContinued = {this.checkoutContinuedHandler}\r\n                        checkoutCanceled = {this.checkoutCanceledHandler}\r\n                    />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component = {ContactData}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        purchased: state.orders.purchased\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Checkout);\r\n","import React from 'react';\r\nimport styles from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients =[];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name:ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n            );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span\r\n            style={{textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid black',\r\n            padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n\r\n    })\r\n    return(\r\n\r\n        <div className={styles.Order}>\r\n        <p>Ingredients: {ingredientOutput} </p>\r\n        <p>Price: <strong> USD {props.price} </strong></p>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default order;\r\n","import React, {Component} from 'react';\r\nimport axios from '../../axios-orders';\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner/>;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order key={order.id}\r\n                       ingredients={order.ingredients}\r\n                       price={order.price}/>\r\n            ))};\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders: state.orders.orders,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders:(token) => dispatch(actions.fetchOrders(token))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\r\n","import React, { Component } from 'react';\r\nimport  { connect } from 'react-redux';\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from '../../components/UI/Button/Button';\r\nimport styles from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport  { Redirect } from 'react-router-dom';\r\n\r\nclass Auth extends Component {\r\n    state={\r\n        controls:{\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength:6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]:{\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n        }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState =>{\r\n            return {isSignup: !prevState.isSignup}\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n\r\n        for (let key in this.state.controls) {\r\n\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key = {formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                    ));\r\n        if (this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n        let errorMessage = null;\r\n        if(this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n                authRedirect = <Redirect to=\"/burger-app\"/>\r\n        }\r\n\r\n\r\n        return(\r\n            <div className={styles.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\" >Submit</Button>\r\n                </form>\r\n                <Button\r\n                    clicked={() => this.switchAuthModeHandler()}\r\n                    btnType=\"Danger\" >SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        building: state.burgerBuilder.building\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth:(email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to =\"/burger-app\" />;\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, {Component} from 'react';\r\nimport Layout from './containers/Layout/Layout';\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\n\r\nclass App extends Component {\r\n\r\n    render(){\r\n    return (\r\n            <Layout>\r\n                <Switch>\r\n                    <Route path=\"/checkout\" component={Checkout} />\r\n                    <Route path=\"/orders\" component={Orders} />\r\n                    <Route path=\"/auth\" component={Auth} />\r\n                    <Route path=\"/logout\" component={Logout} />\r\n                    <Route path=\"/burger-app\" exact component={BurgerBuilder} />\r\n                </Switch>\r\n\r\n            </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject= (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\n","\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState={\r\n    ingredients: null,\r\n    totalPrice:4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        building: true,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedState );\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedSt );\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject( state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    } );\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, { error: true } );\r\n};\r\n\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport * as actions from '../actions/index';\r\nimport { updateObject } from '../../store/utility';\r\n\r\nconst initialState={\r\n    orders:[],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, {id: action.orderId})\r\n\r\n            return updateObject(state, {\r\n                loading: true,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)});\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)});\r\n\r\n\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, {loading: true});\r\n\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, {purchased: false});\r\n\r\n\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return updateObject(state, {loading: true});\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return updateObject(state, {\r\n                loading: false,\r\n                orders: action.orders});\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return updateObject(state, {loading: false});\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport * as actions from '../actions/index';\r\nimport  { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject( state, {token: null, userId: null});\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_FAILED: return authFail(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    orders: orderReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    ));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n)\r\nReactDOM.render(app,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}